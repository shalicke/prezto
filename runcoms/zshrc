#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

# Add MacPorts GNU paths, Cask, coreutils, and gopath.

# go stuff

export GOPATH="$HOME/hacking/go"
export GOROOT="$HOME/hg/go"

export PATH=$GOPATH/bin:$GOROOT/bin:$HOME/bin:$HOME/.cask/bin:$HOME/.rbenv/bin:/opt/local/libexec/gnubin:$PATH
typeset -U PATH

if [ -f /opt/local/etc/profile.d/autojump.zsh ]; then
    . /opt/local/etc/profile.d/autojump.zsh
fi

typeset -U FPATH



# Source aliases.
source $HOME/.zsh_aliases

# rbenv
eval "$(rbenv init -)"

# fasd
eval "$(fasd --init auto)"



# OPAM configuration
. $HOME/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true

# zmv -- because it's amazing.
autoload 'zmv'


## BEGIN PROMPT STUFF

autoload -U colors

typeset -A cr
cr[tl]='⌜'
cr[tr]='⌝'
cr[bl]='⌞'
cr[br]='⌟'
line=''

smiley="%(?,%{$fg[green]%}☺%{$reset_color%},%{$fg[red]%}☹%{$reset_color%})"

atom='⚛'
export PS2=${atom}

### Segment drawing
# A few utility functions to make it easy and re-usable to draw segmented prompts

CURRENT_BG='NONE'
SEGMENT_SEPARATOR='⮀'

# Begin a segment
# Takes two arguments, background and foreground. Both can be omitted,
# rendering default background/foreground.
prompt_segment() {
  local bg fg
  [[ -n $1 ]] && bg="%K{$1}" || bg="%k"
  [[ -n $2 ]] && fg="%F{$2}" || fg="%f"
  if [[ $CURRENT_BG != 'NONE' && $1 != $CURRENT_BG ]]; then
    echo -n " %{$bg%F{$CURRENT_BG}%}$SEGMENT_SEPARATOR%{$fg%} "
  else
    echo -n "%{$bg%}%{$fg%} "
  fi
  CURRENT_BG=$1
  [[ -n $3 ]] && echo -n $3
}

# End the prompt, closing any open segments
prompt_end() {
  if [[ -n $CURRENT_BG ]]; then
    echo -n " %{%k%F{$CURRENT_FG}%}$SEGMENT_SEPARATOR"
  else
    echo -n "%{%k%}"
  fi
  echo -n "%{%f%}"
  CURRENT_BG=''
}


# Context: user@hostname (who am I and where am I)
prompt_context() {
  local user=`whoami`

  if [[ "$user" != "$DEFAULT_USER" || -n "$SSH_CLIENT" ]]; then
    prompt_segment white brightwhite "%(!.%{%F{white}%}.)$user@%m"
  fi
}

# useful chars
#
#    ZSH_THEME_GIT_PROMPT_DIRTY='±'
#     ref=$(git symbolic-ref HEAD 2> /dev/null) || ref="➦ $(git show-ref --head -s --abbrev |head -n1 2> /dev/null)"
#    echo -n "${ref/refs\/heads\//⭠ }$dirty"


# Dir: current working directory
#prompt_dir() {
#  prompt_segment brightcyan red '%~'
#}

# Status:
# - was there an error
# - am I root
# - are there background jobs?

#prompt_status() {
#  local symbols
#  symbols=()
#  [[ $RETVAL -ne 0 ]] && symbols+="%{%F{red}%}✘"
#  [[ $UID -eq 0 ]] && symbols+="%{%F{yellow}%}⚡"
#  [[ $(jobs -l | wc -l) -gt 0 ]] && symbols+="%{%F{cyan}%}⚙"
#  [[ -n "$symbols" ]] && prompt_segment black default "$symbols"
# }

# python virtualenv

source /opt/local/Library/Frameworks/Python.framework/Versions/3.3/bin/virtualenvwrapper.sh
export WORKON_HOME="$HOME/.python-virtualenvs"

# blog stuff
alias nik='workon nikola'
alias cdn='cd ~/git/nikola/neuroses'
alias nC='nikola clean'
alias nA='nikola auto'

## Main prompt

# git prompt stuff
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' check-for-changes true



setopt prompt_subst

autoload -Uz vcs_info

zstyle ':vcs_info:*' actionformats \
    '%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{3}|%F{1}%a%F{5}]%f '
zstyle ':vcs_info:*' formats       \
    '%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{5}]%f '
zstyle ':vcs_info:*' branchformat '%b%F{1}:%F{3}%r'

precmd() { vcs_info }

# what do i want prompt to look like?

# - 2 line
# return code / history
# git info -- branch, diverged, etc




PS1='%F{5}[%F{2}%n%F{5}] %F{3}%3~ ${vcs_info_msg_0_}%f%# '
